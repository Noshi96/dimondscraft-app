{"version":3,"file":"static/js/86.d72c22db.chunk.js","mappings":"4JAEaA,E,QAAcC,GAAAA,IAAAA,WAAU,sDAAVA,CAAU,uE,yKCY/BC,EAAUD,EAAAA,GAAAA,IAAAA,WAAU,wDAAVA,CAAU,sCAKpBE,EAAQF,EAAAA,GAAAA,IAAAA,WAAU,sDAAVA,CAAU,6BAIxB,EAnBa,WACX,OACE,SAACC,EAAO,WACN,SAAC,KAAO,CAACE,GAAG,IAAG,UACb,SAACD,EAAK,CAACE,IAAKC,EAASC,QAAQ,OAAOC,IAAI,0BAIhD,E,2DCwCMC,EAAUR,EAAAA,GAAAA,GAAAA,WAAS,wDAATA,CAAS,8GASnBS,EAAOT,EAAAA,GAAAA,GAAAA,WAAS,qDAATA,CAAS,qBAIhBU,GAAgBV,EAAAA,EAAAA,IAAOW,EAAAA,IAAQ,yEAAfX,CAAe,uRAyBrC,EAtFY,WAmCV,OACE,SAACQ,EAAO,UAnCkB,CAC1B,CACEI,IAAK,OACLC,YAAa,IACbC,WAAY,OACZC,OAAO,GAET,CACEH,IAAK,UACLC,YAAa,WACbC,WAAY,WAEd,CACEF,IAAK,QACLC,YAAa,SACbC,WAAY,YAEd,CACEF,IAAK,MACLC,YAAa,OACbC,WAAY,OAEd,CACEF,IAAK,QACLC,YAAa,aACbC,WAAY,aAEd,CACEF,IAAK,QACLC,YAAa,SACbC,WAAY,UAMLE,KAAI,gBAAGJ,EAAG,EAAHA,IAAKC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAAK,OAC/C,SAACN,EAAI,WACH,SAACC,EAAa,CAACO,IAAKF,EAAOZ,GAAIU,EAAY,SACxCC,KAFMF,EAIJ,KAIf,EC1CMM,EACiB,qBAAdC,WACP,mBAAmBC,KAAKD,UAAUE,WA4DpC,EA1De,WACb,OAA0BC,EAAAA,EAAAA,WAAS,GAAM,eAAlCC,EAAK,KAAEC,EAAQ,KAEhBC,EAAe,SAACC,GAAa,OAAK,SACtCC,GAGO,OAALA,QAAK,IAALA,GAAAA,EAAOC,MACP,CAAC,MAAO,SAASC,SAAUF,EAA8Bf,MAK3DY,EAASE,EACX,CAAC,EAaD,OACE,iCACE,SAACI,EAAA,EAAU,CACTC,QAASN,GAAa,GACtBO,KAAK,QACLC,KAAK,QACLC,MAAM,UACN,aAAW,OACXC,GAAI,CAAEC,GAAI,GAAI,UAEd,SAACC,EAAA,EAAQ,CAACC,MAAO,CAAEC,SAAU,SAE/B,SAACC,EAAA,EAAe,CACdC,OA7CW,QA8CXf,KAAMH,EACNmB,QAASjB,GAAa,GACtBkB,OAAQlB,GAAa,GACrBmB,2BAA4B1B,EAC5B2B,iBAAkB3B,EAClB4B,WAAY,CACVX,GAAI,CACFY,gBAAiB,YAEnB,UAjCN,SAACC,EAAA,EAAG,CACFb,GAAI,CAAEc,MAAO,KACbC,KAAK,eACLnB,QAASN,GAAa,GACtB0B,UAAW1B,GAAa,GAAO,UAE/B,SAAC,EAAG,UAiCV,ECpDMxB,EAAUD,EAAAA,GAAAA,OAAAA,WAAa,0DAAbA,CAAa,gNAWzBD,EAAAA,GAOJ,EA7Be,WACb,OACE,SAAC,EAAO,WACN,UAACA,EAAA,EAAW,YACV,SAAC,EAAI,KACL,SAAC,EAAM,QAIf,E,SCZaqD,GAAcC,EAAAA,EAAAA,IAAiB,2lB,UCGtCC,EAAWC,EAAAA,MAAW,kBAAM,qDAA8B,IAmBhE,EAbiB,WACf,IALyBC,EAKnBC,GAASC,EAAAA,EAAAA,MAEf,OACE,iCACE,SAAC,EAAM,IACND,IAVoBD,GAUQ,SAACF,EAAQ,KATnC,SAAC,WAAc,CAACK,SAAS,aAAY,SAAEH,MAU1C,SAACJ,EAAW,KACZ,SAAC,KAAiB,MAGxB,C","sources":["layouts/PageWrapper/index.ts","layouts/NavBar/Logo.tsx","layouts/NavBar/Nav.tsx","layouts/Drawer/index.tsx","layouts/NavBar/index.tsx","styles/global-styles.ts","pages/RootPage/index.tsx"],"sourcesContent":["import styled from 'styled-components/macro'\n\nexport const PageWrapper = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  box-sizing: content-box;\n  position: relative;\n`\n","import styled from 'styled-components/macro'\nimport { NavLink } from 'react-router-dom'\nimport logoImg from '../../assets/logoforge.png'\n\nconst Logo = () => {\n  return (\n    <Wrapper>\n      <NavLink to='/'>\n        <Image src={logoImg} loading='lazy' alt='logo_diamondscraft' />\n      </NavLink>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Image = styled.img`\n  width: 100%;\n  height: 4rem;\n`\nexport default Logo\n","import styled from 'styled-components/macro'\nimport { NavLink } from 'react-router-dom'\nimport { PathsTypes } from './model'\n\nconst Nav = () => {\n  const paths: PathsTypes[] = [\n    {\n      key: 'home',\n      destination: '/',\n      nameOfPage: 'Home',\n      exact: true,\n    },\n    {\n      key: 'artists',\n      destination: '/artists',\n      nameOfPage: 'Artists',\n    },\n    {\n      key: 'about',\n      destination: '/about',\n      nameOfPage: 'About us',\n    },\n    {\n      key: 'art',\n      destination: '/art',\n      nameOfPage: 'Art',\n    },\n    {\n      key: 'media',\n      destination: '/our-media',\n      nameOfPage: 'Our media',\n    },\n    {\n      key: 'links',\n      destination: '/links',\n      nameOfPage: 'Links',\n    },\n  ]\n\n  return (\n    <NavList>\n      {paths.map(({ key, destination, nameOfPage, exact }) => (\n        <Item key={key}>\n          <NavLinkStyled end={exact} to={destination}>\n            {nameOfPage}\n          </NavLinkStyled>\n        </Item>\n      ))}\n    </NavList>\n  )\n}\n\nconst NavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 2rem;\n  list-style-type: none;\n  padding-inline-start: 0;\n`\n\nconst Item = styled.li`\n  cursor: pointer;\n`\n\nconst NavLinkStyled = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  padding: 1rem 0;\n  text-transform: capitalize;\n  text-decoration: none;\n  font-size: 1.1rem;\n  transition: all 0.4s;\n\n  &:link,\n  &:visited {\n    color: #ffffff;\n  }\n  &:hover,\n  &:active {\n    background-color: #22192f;\n    color: #ffaa00;\n  }\n\n  &.active {\n    background-color: #22192f;\n    color: #ffaa00;\n  }\n`\n\nexport default Nav\n","import { useState } from 'react'\nimport Box from '@mui/material/Box'\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Nav from '../NavBar/Nav'\n\nconst anchorType = 'right'\nconst iOS =\n  typeof navigator !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent)\n\nconst Drawer = () => {\n  const [state, setState] = useState(false)\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event?.type &&\n      ['Tab', 'Shift'].includes((event as React.KeyboardEvent).key)\n    ) {\n      return\n    }\n\n    setState(open)\n  }\n\n  const list = () => (\n    <Box\n      sx={{ width: 250 }}\n      role='presentation'\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <Nav />\n    </Box>\n  )\n\n  return (\n    <>\n      <IconButton\n        onClick={toggleDrawer(true)}\n        size='large'\n        edge='start'\n        color='inherit'\n        aria-label='menu'\n        sx={{ mr: 2 }}\n      >\n        <MenuIcon style={{ fontSize: 40 }} />\n      </IconButton>\n      <SwipeableDrawer\n        anchor={anchorType}\n        open={state}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#0A0019',\n          },\n        }}\n      >\n        {list()}\n      </SwipeableDrawer>\n    </>\n  )\n}\n\nexport default Drawer\n","import styled from 'styled-components/macro'\nimport Logo from './Logo'\nimport { PageWrapper } from '../PageWrapper'\nimport Drawer from '../Drawer'\n\nconst NavBar = () => {\n  return (\n    <Wrapper>\n      <PageWrapper>\n        <Logo />\n        <Drawer />\n      </PageWrapper>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.header`\n  box-shadow: 0 1px 0 0 #000000;\n  height: 5rem;\n  display: flex;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  background-color: #090119;\n  color: #ffffff;\n  z-index: 12;\n\n  ${PageWrapper} {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`\n\nexport default NavBar\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    padding-top: 2rem;\n    line-height: 1.5;\n  }\n\n  body {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    height: 100vh;\n    background-color: #000000;\n  }\n\n  body.fontLoaded {\n    font-family: 'Inter', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n  \n  p,\n  label {\n    line-height: 1.5em;\n  }\n\n  input, select, button {\n    font-family: inherit;\n    font-size: inherit;\n  }\n\n  .icon {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n\n  * {\n  box-sizing: border-box;\n  }\n`\n","import React from 'react'\nimport NavBar from '../../layouts/NavBar'\nimport { GlobalStyle } from '../../styles/global-styles'\nimport { useOutlet } from 'react-router-dom'\nimport { ScrollRestoration } from 'react-router-dom'\nconst HomePage = React.lazy(() => import('../../pages/HomePage'))\n\nconst suspenseComponent = (component: React.ReactNode) => {\n  return <React.Suspense fallback='Loading...'>{component}</React.Suspense>\n}\n\nconst RootPage = () => {\n  const outlet = useOutlet()\n\n  return (\n    <>\n      <NavBar />\n      {outlet || suspenseComponent(<HomePage />)}\n      <GlobalStyle />\n      <ScrollRestoration />\n    </>\n  )\n}\n\nexport default RootPage\n"],"names":["PageWrapper","styled","Wrapper","Image","to","src","logoImg","loading","alt","NavList","Item","NavLinkStyled","NavLink","key","destination","nameOfPage","exact","map","end","iOS","navigator","test","userAgent","useState","state","setState","toggleDrawer","open","event","type","includes","IconButton","onClick","size","edge","color","sx","mr","Menu","style","fontSize","SwipeableDrawer","anchor","onClose","onOpen","disableBackdropTransition","disableDiscovery","PaperProps","backgroundColor","Box","width","role","onKeyDown","GlobalStyle","createGlobalStyle","HomePage","React","component","outlet","useOutlet","fallback"],"sourceRoot":""}