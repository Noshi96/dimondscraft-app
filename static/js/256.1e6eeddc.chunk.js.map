{"version":3,"file":"static/js/256.1e6eeddc.chunk.js","mappings":"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","sources":["layouts/Particles/config/customOptionsFour.tsx","layouts/Particles/index.tsx","layouts/Button/Button.tsx","features/EventSection/components/SingleEvent.tsx","features/EventSection/components/EventList.tsx","features/EventSection/index.tsx","hooks/useCurrentHeight.ts","pages/HomePage/index.tsx"],"sourcesContent":["import type { ISourceOptions } from 'tsparticles-engine'\r\n\r\nexport const customOptionsFour: ISourceOptions = {\r\n  fullScreen: { enable: false },\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 700,\r\n      },\r\n    },\r\n    color: {\r\n      value: '#ffffff',\r\n    },\r\n    shape: {\r\n      type: 'circle',\r\n      stroke: {\r\n        width: 0,\r\n        color: '#000000',\r\n      },\r\n      polygon: {\r\n        nb_sides: 5,\r\n      },\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n      random: false,\r\n      anim: {\r\n        enable: false,\r\n        speed: 0.1,\r\n        opacity_min: 0.1,\r\n        sync: false,\r\n      },\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 10,\r\n        size_min: 0.1,\r\n        sync: false,\r\n      },\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 150,\r\n      color: '#ffffff',\r\n      opacity: 0.4,\r\n      width: 1,\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 2,\r\n      direction: 'none',\r\n      random: false,\r\n      straight: false,\r\n      out_mode: 'out',\r\n      bounce: false,\r\n      attract: {\r\n        enable: false,\r\n        rotateX: 600,\r\n        rotateY: 1200,\r\n      },\r\n    },\r\n  },\r\n  interactivity: {\r\n    detect_on: 'canvas',\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: 'grab',\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: 'push',\r\n      },\r\n      resize: true,\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 140,\r\n        line_linked: {\r\n          opacity: 1,\r\n        },\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3,\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4,\r\n      },\r\n      push: {\r\n        particles_nb: 4,\r\n      },\r\n      remove: {\r\n        particles_nb: 2,\r\n      },\r\n    },\r\n  },\r\n  retina_detect: true,\r\n}\r\n","import { useCallback } from 'react'\r\nimport type { Engine } from 'tsparticles-engine'\r\nimport Particles from 'react-tsparticles'\r\nimport { loadFull } from 'tsparticles'\r\nimport styled from 'styled-components'\r\nimport type { ISourceOptions } from 'tsparticles-engine'\r\nimport type { CSSProperties } from 'react'\r\n\r\ninterface Props {\r\n  width?: string\r\n  height?: string\r\n  options?: ISourceOptions\r\n  style?: CSSProperties\r\n}\r\n\r\nconst ParticlesBackground = ({ width, options, height, style }: Props) => {\r\n  const particlesInit = useCallback(async (engine: Engine) => {\r\n    await loadFull(engine)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <StyledParticles\r\n        id='tsparticles'\r\n        init={particlesInit}\r\n        options={options}\r\n        width={width}\r\n        height={height}\r\n        style={style}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledParticles = styled(Particles)`\r\n  height: ${(props) => (props.height ? props.height : '0')};\r\n`\r\nexport default ParticlesBackground\r\n","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n  border: 2px solid #ffffff;\r\n  padding: 0.75rem 1.75rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #ffffff11;\r\n  }\r\n  &:active {\r\n    background-color: transparent;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { Button } from '../../../layouts/Button/Button'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Event } from './Models/Event'\r\n\r\ninterface Props {\r\n  imgSrc: string\r\n  alt: string\r\n  event: Event\r\n}\r\n\r\nconst SingleEvent = ({ imgSrc, alt, event }: Props) => {\r\n  const navigate = useNavigate()\r\n  const destination = '/event-page'\r\n\r\n  const navigateToEventHandler = () => {\r\n    navigate(destination, { state: { event } })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Poster src={imgSrc} alt={alt} loading='lazy' />\r\n      <Button onClick={navigateToEventHandler}>Dowiedz się więcej</Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n`\r\nconst Poster = styled.img`\r\n  width: 260px;\r\n  height: 368px;\r\n`\r\n\r\nexport default SingleEvent\r\n","import styled from 'styled-components'\r\nimport SingleEvent from './SingleEvent'\r\nimport poster1 from '../../../assets/AukcjaTurtleUnite.jpg'\r\nimport poster2 from '../../../assets/PierwszaAukjaTokenow.jpg'\r\nimport poster3 from '../../../assets/plakat2AukcjaTokenow.jpg'\r\nimport poster4 from '../../../assets/SummerArtBreak.jpg'\r\nimport poster5 from '../../../assets/SummerArtBreak2.jpg'\r\nimport { EventType } from './Models/EventType'\r\n\r\nconst EventList = () => {\r\n  const content = `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\r\n\r\n  const events: EventType[] = [\r\n    {\r\n      alt: 'turtle-event-poster',\r\n      imgSrc: poster1,\r\n      event: {\r\n        title: 'turtle event',\r\n        imgSrc: poster1,\r\n        alt: 'turtle-event-poster',\r\n        contentText: `1 ${content}`,\r\n      },\r\n    },\r\n    {\r\n      alt: 'first-token-event-poster',\r\n      imgSrc: poster2,\r\n      event: {\r\n        title: 'first token event',\r\n        imgSrc: poster2,\r\n        alt: 'first-token-event-poster',\r\n        contentText: `2 ${content}`,\r\n      },\r\n    },\r\n    {\r\n      alt: 'token-event-poster',\r\n      imgSrc: poster3,\r\n      event: {\r\n        title: 'token event poster',\r\n        imgSrc: poster3,\r\n        alt: 'token-event-poster',\r\n        contentText: `3 ${content}`,\r\n      },\r\n    },\r\n    {\r\n      alt: 'summer-art-break-1-poster',\r\n      imgSrc: poster4,\r\n      event: {\r\n        title: 'summer art break',\r\n        imgSrc: poster4,\r\n        alt: 'summer-art-break-1-poster',\r\n        contentText: `4 ${content}`,\r\n      },\r\n    },\r\n    {\r\n      alt: 'summer-art-break-2-poster',\r\n      imgSrc: poster5,\r\n      event: {\r\n        title: 'summer art break 2',\r\n        imgSrc: poster5,\r\n        alt: 'summer-art-break-2-poster',\r\n        contentText: `5 ${content}`,\r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <EventListContainer>\r\n      {events.map(({ alt, imgSrc, event }) => (\r\n        <SingleEvent key={alt} alt={alt} imgSrc={imgSrc} event={event} />\r\n      ))}\r\n    </EventListContainer>\r\n  )\r\n}\r\n\r\nconst EventListContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 4rem 2rem;\r\n`\r\n\r\nexport default EventList\r\n","import styled from 'styled-components'\r\nimport EventList from './components/EventList'\r\n\r\ninterface Props {\r\n  sectionTitle: string\r\n}\r\n\r\nexport function EventSection({ sectionTitle }: Props) {\r\n  return (\r\n    <Section>\r\n      <SectionTitle>{sectionTitle}</SectionTitle>\r\n      <EventList />\r\n    </Section>\r\n  )\r\n}\r\n\r\nconst Section = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 8rem;\r\n  background-color: #000000;\r\n`\r\n\r\nconst SectionTitle = styled.h2`\r\n  color: #ffffff;\r\n  text-transform: uppercase;\r\n`\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst getHeight = () =>\r\n  window.innerHeight ||\r\n  document.documentElement.clientHeight ||\r\n  document.body.clientHeight\r\n\r\nexport function useCurrentHeight() {\r\n  // save current window width in the state object\r\n  let [height, setHeight] = useState(getHeight())\r\n\r\n  // in this case useEffect will execute only once because\r\n  // it does not have any dependencies.\r\n  useEffect(() => {\r\n    let isMounted = true\r\n    // timeoutId for debounce mechanism\r\n    let timeoutId: NodeJS.Timeout\r\n\r\n    const resizeListener = () => {\r\n      if (isMounted) {\r\n        // prevent execution of previous setTimeout\r\n        clearTimeout(timeoutId)\r\n        // change width from the state object after 150 milliseconds\r\n        timeoutId = setTimeout(() => setHeight(getHeight()), 150)\r\n      }\r\n    }\r\n    // set resize listener\r\n    window.addEventListener('resize', resizeListener)\r\n\r\n    // clean up function\r\n    return () => {\r\n      isMounted = false\r\n      // remove resize listener\r\n      window.removeEventListener('resize', resizeListener)\r\n    }\r\n  }, [])\r\n\r\n  return height\r\n}\r\n","import { EventSection } from '../../features/EventSection'\r\nimport { PageWrapper } from '../../layouts/PageWrapper'\r\nimport ParticlesBackground from '../../layouts/Particles'\r\nimport backgroundPhoto from '../../assets/samanta.png'\r\nimport { customOptionsFour } from '../../layouts/Particles/config/customOptionsFour'\r\nimport styled from 'styled-components'\r\nimport { useCurrentHeight } from '../../hooks/useCurrentHeight'\r\n\r\nconst HomePage = () => {\r\n  let height = `${useCurrentHeight()}px`\r\n\r\n  return (\r\n    <>\r\n      <PageWrapper>\r\n        <Image\r\n          src={backgroundPhoto}\r\n          alt='logo'\r\n          width={'100%'}\r\n          height={height}\r\n        />\r\n        <ParticlesBackground\r\n          width='100%'\r\n          options={customOptionsFour}\r\n          height={height}\r\n        />\r\n        <EventSection sectionTitle={'NASZE AKTUALNE PROJEKTY:'} />\r\n      </PageWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Image = styled.img`\r\n  z-index: -1;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  object-fit: cover;\r\n  object-position: 70% 0%;\r\n`\r\n\r\nexport default HomePage\r\n"],"names":["customOptionsFour","fullScreen","enable","particles","number","value","density","value_area","color","shape","type","stroke","width","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","StyledParticles","styled","Particles","props","height","options","style","particlesInit","useCallback","engine","loadFull","id","init","Button","Container","Poster","imgSrc","alt","event","navigate","useNavigate","src","loading","onClick","state","EventListContainer","content","poster1","title","contentText","poster2","poster3","poster4","poster5","map","EventSection","sectionTitle","Section","SectionTitle","getHeight","window","innerHeight","document","documentElement","clientHeight","body","Image","useState","setHeight","useEffect","timeoutId","isMounted","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","useCurrentHeight","PageWrapper","backgroundPhoto"],"sourceRoot":""}