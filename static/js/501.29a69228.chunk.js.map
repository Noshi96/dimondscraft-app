{"version":3,"file":"static/js/501.29a69228.chunk.js","mappings":"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","sources":["layouts/AdjustingSection/AdjustingSection.tsx","layouts/PageWrapper/index.ts","layouts/NavBar/Logo.tsx","layouts/NavBar/Nav.tsx","layouts/Drawer/index.tsx","layouts/NavBar/index.tsx","hooks/useChangeStateOnScroll.ts","styles/global-styles.ts","features/Footer/layouts/Header3.ts","features/Footer/components/LinkIcon.tsx","features/Footer/components/SocialMedia.tsx","features/Footer/components/TokenData.tsx","features/Footer/components/CryptoPrices.tsx","features/Footer/components/NavigationMenu.tsx","layouts/Particles/config/customOptionsFour.tsx","layouts/Particles/index.tsx","features/Footer/index.tsx","utils/DelayFunction.ts","features/NewEntrySection/index.tsx","hooks/useTextTyping.ts","pages/RootPage/index.tsx","styles/breakpoints.ts"],"sourcesContent":["import styled from 'styled-components/macro'\n\nexport const AdjustingSection = styled.div`\n  max-width: 1980px;\n  width: 90%;\n  margin: 0 auto;\n  box-sizing: content-box;\n  position: relative;\n`\n","import styled from 'styled-components/macro'\n\nexport const PageWrapper = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  box-sizing: content-box;\n  position: relative;\n`\n","import styled from 'styled-components/macro'\nimport { NavLink } from 'react-router-dom'\nimport logoImg from '../../assets/logoforge.png'\n\nconst Logo = () => {\n  return (\n    <Wrapper>\n      <NavLink to='/'>\n        <Image src={logoImg} loading='lazy' alt='logo_diamondscraft' />\n      </NavLink>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Image = styled.img`\n  width: 100%;\n  height: 4rem;\n`\nexport default Logo\n","import styled from 'styled-components/macro'\nimport { NavLink } from 'react-router-dom'\nimport { PathsTypes } from './model'\n\nconst scrollToEntrySection = (\n  scrollHook: 'entryPageStartHook' | 'entryPageEndHook'\n): void => {\n  setTimeout(() => {\n    const element = document.getElementById(scrollHook) as HTMLElement\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'start',\n    })\n  }, 300)\n}\n\nconst Nav = () => {\n  const paths: PathsTypes[] = [\n    {\n      key: 'home',\n      destination: '/',\n      nameOfPage: 'Strona główna',\n      exact: true,\n      scrollHook: 'entryPageStartHook',\n    },\n    {\n      key: 'about',\n      destination: '/about',\n      nameOfPage: 'O nas',\n      scrollHook: 'entryPageEndHook',\n    },\n    {\n      key: 'gallery',\n      destination: '/gallery',\n      nameOfPage: 'Galeria',\n      scrollHook: 'entryPageEndHook',\n    },\n    {\n      key: 'contact',\n      destination: '/contact',\n      nameOfPage: 'Kontakt',\n      scrollHook: 'entryPageEndHook',\n    },\n  ]\n\n  return (\n    <NavList>\n      {paths.map(({ key, destination, nameOfPage, exact, scrollHook }) => (\n        <Item key={key}>\n          <NavLinkStyled\n            end={exact}\n            to={destination}\n            onClick={() => scrollToEntrySection(scrollHook)}\n          >\n            {nameOfPage}\n          </NavLinkStyled>\n        </Item>\n      ))}\n    </NavList>\n  )\n}\n\nconst NavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 2rem;\n  list-style-type: none;\n  padding-inline-start: 0;\n`\n\nconst Item = styled.li`\n  cursor: pointer;\n`\n\nconst NavLinkStyled = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  padding: 1rem 0;\n  text-transform: capitalize;\n  font-size: 1.1rem;\n  transition: all 0.4s;\n\n  &:link,\n  &:visited {\n    color: #ffffff;\n  }\n  &:hover,\n  &:active {\n    background-color: #2c1b96;\n    color: #ffaa00;\n  }\n\n  &.active {\n    background-color: #2c1b96;\n    color: #ffaa00;\n  }\n`\n\nexport default Nav\n","import { useState } from 'react'\nimport Box from '@mui/material/Box'\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Nav from '../NavBar/Nav'\n\nconst anchorType = 'right'\nconst iOS =\n  typeof navigator !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent)\n\nconst Drawer = () => {\n  const [state, setState] = useState(false)\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event?.type &&\n      ['Tab', 'Shift'].includes((event as React.KeyboardEvent).key)\n    ) {\n      return\n    }\n\n    setState(open)\n  }\n\n  const list = () => (\n    <Box\n      sx={{ width: 250 }}\n      role='presentation'\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <Nav />\n    </Box>\n  )\n\n  return (\n    <>\n      <IconButton\n        onClick={toggleDrawer(true)}\n        size='large'\n        edge='start'\n        color='inherit'\n        aria-label='menu'\n        sx={{ mr: 2 }}\n      >\n        <MenuIcon style={{ fontSize: 40 }} />\n      </IconButton>\n      <SwipeableDrawer\n        anchor={anchorType}\n        open={state}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#080924',\n          },\n        }}\n      >\n        {list()}\n      </SwipeableDrawer>\n    </>\n  )\n}\n\nexport default Drawer\n","import styled from 'styled-components/macro'\nimport Logo from './Logo'\nimport { PageWrapper } from '../PageWrapper'\nimport Drawer from '../Drawer'\nimport { useState } from 'react'\nimport { useChangeStateOnScroll } from '../../hooks/useChangeStateOnScroll'\nimport { ScrollTypes } from './model'\nimport { Layout } from '../../styles/breakpoints'\n\nconst NavBar = () => {\n  const [show, setShow] = useState<boolean>(false)\n\n  useChangeStateOnScroll(setShow, 300)\n\n  return (\n    <Wrapper showState={show}>\n      <PageWrapper>\n        <Logo />\n        <Drawer />\n      </PageWrapper>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.header<ScrollTypes>`\n  height: 5rem;\n  display: flex;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  color: #ffffff;\n  z-index: 12;\n\n  ${PageWrapper} {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  transition-timing-function: ease-in;\n  transition: 0.5s;\n  ${({ showState }) =>\n    showState\n      ? 'background-color:#000000cc;'\n      : 'background-color:transparent;'};\n\n  @media only screen and (${Layout.tablet}) {\n    background-color: transparent;\n  }\n`\n\nexport default NavBar\n","import { useEffect } from 'react'\n\nexport function useChangeStateOnScroll(\n  setShowState: React.Dispatch<React.SetStateAction<boolean>>,\n  offsetValue: number\n) {\n  const controlNavbar = () =>\n    window.scrollY < offsetValue ? setShowState(false) : setShowState(true)\n\n  useEffect(() => {\n    window.addEventListener('scroll', controlNavbar)\n    return () => {\n      window.removeEventListener('scroll', controlNavbar)\n    }\n  })\n}\n","import { createGlobalStyle } from 'styled-components'\nimport regular from '../fonts/metropolis.regular.otf'\nimport bold from '../fonts/metropolis.bold.otf'\n\nexport const GlobalStyle = createGlobalStyle`\n\n  @font-face {\n    font-family: Metropolis;\n    src: url(${regular}) format(\"opentype\");\n  }\n\n  @font-face {\n    font-family: Metropolis;\n    font-weight: 700;\n    src: url(${bold}) format(\"opentype\");\n  }\n\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    line-height: 1.5;\n  }\n\n  body {\n    font-family: Metropolis;\n    height: 100vh;\n    background-color: #000000;\n  }\n\n  body.fontLoaded {\n    font-family: Metropolis;\n  }\n  \n  p,\n  label {\n    line-height: 1.5em;\n  }\n\n  input, select, button {\n    font-family: inherit;\n    font-size: inherit;\n  }\n\n  .icon {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    text-decoration: none;\n  }\n`\n","import styled from 'styled-components/macro'\n\nexport const Header3 = styled.div`\n  font-size: 2rem;\n  margin-bottom: 1.25rem;\n  font-family: Metropolis, sans-serif;\n  font-weight: 700;\n`\n","import styled from 'styled-components'\n\ninterface Props {\n  path: string\n  redirectionLink: string\n  altText: string\n}\n\nconst LinkIcon = ({ path, redirectionLink, altText }: Props) => {\n  return (\n    <a href={redirectionLink} target={'_blank'} rel='noopener noreferrer'>\n      <Icon src={path} alt={altText} />\n    </a>\n  )\n}\n\nconst Icon = styled.img`\n  width: 40px;\n  height: 40px;\n  transition: all 0.3s ease-in-out;\n  margin-right: 3rem;\n  filter: grayscale(1);\n\n  &:hover {\n    transform: translateY(-8px);\n    filter: grayscale(0);\n  }\n`\n\nexport default LinkIcon\n","import styled from 'styled-components'\nimport { Header3 } from '../layouts/Header3'\nimport LinkIcon from './LinkIcon'\nimport { MediaIcon } from '../models/MediaIcon'\n\ninterface Props {\n  headerText: string\n  media: MediaIcon[]\n}\n\nconst SocialMedia = ({ headerText, media }: Props) => {\n  return (\n    <Container>\n      <Header3> {headerText} </Header3>\n      <LinkIconsWrapper>\n        {media.map(({ path, redirectionLink, altText }, i) => (\n          <LinkIcon\n            key={i}\n            path={path}\n            redirectionLink={redirectionLink}\n            altText={altText}\n          />\n        ))}\n      </LinkIconsWrapper>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  color: #ffffff;\n  margin-bottom: 2.5rem;\n`\n\nconst LinkIconsWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  width: 100%;\n`\n\nexport default SocialMedia\n","import styled from 'styled-components'\n\ninterface Props {\n  iconPath: string\n  name: string\n  price: number | string\n  className?: string\n}\n\nconst iconSize = 16\nconst iconRightMargin = 8\n\nconst TokenData = ({ iconPath, name, price, className }: Props) => {\n  return (\n    <TokenDataWrapper className={className || ''}>\n      <CryptoSignature>\n        <Icon src={iconPath} alt={name} />\n        <Name> {name} </Name>\n      </CryptoSignature>\n\n      <Price> {price || '-'} PLN </Price>\n    </TokenDataWrapper>\n  )\n}\n\nconst TokenDataWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nconst CryptoSignature = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n`\n\nconst Icon = styled.img`\n  width: ${iconSize}px;\n  height: ${iconSize}px;\n  margin-right: ${iconRightMargin}px;\n`\n\nconst Name = styled.div`\n  margin-right: 4rem;\n  font-size: 1.2rem;\n`\n\nconst Price = styled.div`\n  font-size: 1.2rem;\n  margin: 0.5rem 0 0 ${iconSize / 2}px;\n  color: #aaaaaa;\n`\n\nexport default TokenData\n","import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { Header3 } from '../layouts/Header3'\nimport styled from 'styled-components'\nimport TokenData from './TokenData'\n\nimport BitcoinLogo from '../../../assets/tokens/btc.png'\nimport EthereumLogo from '../../../assets/tokens/eth.png'\nimport CardanoLogo from '../../../assets/tokens/ada.png'\nimport DogeLogo from '../../../assets/tokens/doge.png'\n\ninterface TokenPrices {\n  bitcoin: string\n  ethereum: string\n  cardano: string\n  doge: string\n}\n\ninterface TokenResponse {\n  market_data: {\n    current_price: {\n      pln: number\n    }\n  }\n}\n\nconst plnFormatter = new Intl.NumberFormat('pl-PL', {\n  style: 'currency',\n  currency: 'PLN',\n})\n\nconst formatToPlnWithoutUnits = (text: number): string => {\n  return plnFormatter.format(text).slice(0, -3)\n}\n\nconst CryptoPrices = () => {\n  const initPriceState = {\n    bitcoin: '-',\n    ethereum: '-',\n    cardano: '-',\n    doge: '-',\n  }\n  const [prices, setPrices] = useState<TokenPrices>(initPriceState)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const [btcRes, ethRes, adaRes, dogeRes] = await Promise.all([\n        axios.get<TokenResponse>(\n          `https://api.coingecko.com/api/v3/coins/bitcoin`\n        ),\n        axios.get<TokenResponse>(\n          `https://api.coingecko.com/api/v3/coins/ethereum`\n        ),\n        axios.get<TokenResponse>(\n          `https://api.coingecko.com/api/v3/coins/cardano`\n        ),\n        axios.get<TokenResponse>(\n          `https://api.coingecko.com/api/v3/coins/dogecoin`\n        ),\n      ])\n\n      setPrices({\n        bitcoin: formatToPlnWithoutUnits(\n          btcRes.data.market_data.current_price.pln\n        ),\n        ethereum: formatToPlnWithoutUnits(\n          ethRes.data.market_data.current_price.pln\n        ),\n        cardano: formatToPlnWithoutUnits(\n          adaRes.data.market_data.current_price.pln\n        ),\n        doge: formatToPlnWithoutUnits(\n          dogeRes.data.market_data.current_price.pln\n        ),\n      } as TokenPrices)\n    }\n\n    fetchData()\n  }, [])\n\n  return (\n    <Container>\n      <Header3> Aktualne ceny kryptowalut: </Header3>\n      <TokenDataStyled\n        iconPath={BitcoinLogo}\n        name={'Bitcoin (BTC)'}\n        price={prices?.bitcoin}\n      />\n      <TokenDataStyled\n        iconPath={EthereumLogo}\n        name={'Ethereum (ETH)'}\n        price={prices?.ethereum}\n      />\n      <TokenDataStyled\n        iconPath={CardanoLogo}\n        name={'Cardano (ADA)'}\n        price={prices?.cardano}\n      />\n      <TokenDataStyled\n        iconPath={DogeLogo}\n        name={'Dogecoin (doge)'}\n        price={prices?.doge}\n      />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  color: #ffffff;\n  margin-bottom: 4rem;\n`\n\nconst TokenDataStyled = styled(TokenData)`\n  margin-bottom: 1rem;\n`\n\nexport default CryptoPrices\n","import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport { Layout } from '../../../styles/breakpoints'\n\nconst NavigationMenu = () => {\n  const smoothNavigate = () => {\n    setTimeout(() => {\n      const element = document.getElementById('entryPageEndHook') as HTMLElement\n      element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n        inline: 'start',\n      })\n    }, 300)\n  }\n\n  return (\n    <Container>\n      <NavigationWrapper>\n        <LinksColumn>\n          <NavLinkStyled end={true} to={'/'} onClick={smoothNavigate}>\n            {' '}\n            {'Strona główna'.toUpperCase()}{' '}\n          </NavLinkStyled>\n        </LinksColumn>\n        <LinksColumn>\n          <NavLinkStyled to={'/about'} onClick={smoothNavigate}>\n            {' '}\n            {'O nas'.toUpperCase()}{' '}\n          </NavLinkStyled>\n        </LinksColumn>\n        <LinksColumn>\n          <NavLinkStyled to={'/gallery'} onClick={smoothNavigate}>\n            {' '}\n            {'Galeria'.toUpperCase()}{' '}\n          </NavLinkStyled>\n        </LinksColumn>\n        <LinksColumn>\n          <NavLinkStyled to={'/contact'} onClick={smoothNavigate}>\n            {' '}\n            {'Kontakt'.toUpperCase()}{' '}\n          </NavLinkStyled>\n        </LinksColumn>\n      </NavigationWrapper>\n    </Container>\n  )\n}\n\nexport default NavigationMenu\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  color: #ffffff;\n  margin-bottom: 1rem;\n`\n\nconst NavigationWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 1rem 1rem;\n\n  @media only screen and (${Layout.laptop}) {\n    margin: 8rem 0 0 0;\n  }\n`\n\nconst LinksColumn = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-direction: column;\n  gap: 1rem;\n`\n\nconst NavLinkStyled = styled(NavLink)`\n  background: transparent;\n  color: #aeaeae;\n  border: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n  font-size: 1.2rem;\n  box-sizing: border-box;\n  padding: 6px 8px;\n\n  &:hover {\n    background: #ffffff11;\n  }\n\n  &.active {\n    background-color: #ffffff;\n    color: #22192f;\n  }\n`\n","import type { ISourceOptions } from 'tsparticles-engine'\n\nexport const customOptionsFour: ISourceOptions = {\n  fullScreen: { enable: false },\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 700,\n      },\n    },\n    color: {\n      value: '#ffffff',\n    },\n    shape: {\n      type: 'circle',\n      stroke: {\n        width: 0,\n        color: '#000000',\n      },\n      polygon: {\n        nb_sides: 5,\n      },\n    },\n    opacity: {\n      value: 0.5,\n      random: false,\n      anim: {\n        enable: false,\n        speed: 0.1,\n        opacity_min: 0.1,\n        sync: false,\n      },\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 10,\n        size_min: 0.1,\n        sync: false,\n      },\n    },\n    line_linked: {\n      enable: true,\n      distance: 120,\n      color: '#ffffff',\n      opacity: 0.4,\n      width: 1,\n    },\n    move: {\n      enable: true,\n      speed: 2,\n      direction: 'none',\n      random: false,\n      straight: false,\n      out_mode: 'out',\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200,\n      },\n    },\n  },\n  interactivity: {\n    detect_on: 'canvas',\n    events: {\n      onhover: {\n        enable: true,\n        mode: 'grab',\n      },\n      onclick: {\n        enable: true,\n        mode: 'push',\n      },\n      resize: true,\n    },\n    modes: {\n      grab: {\n        distance: 140,\n        line_linked: {\n          opacity: 1,\n        },\n      },\n      bubble: {\n        distance: 400,\n        size: 40,\n        duration: 2,\n        opacity: 8,\n        speed: 3,\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4,\n      },\n      push: {\n        particles_nb: 4,\n      },\n      remove: {\n        particles_nb: 2,\n      },\n    },\n  },\n  retina_detect: true,\n}\n","import { useCallback } from 'react'\nimport type { Engine } from 'tsparticles-engine'\nimport Particles from 'react-tsparticles'\nimport { loadFull } from 'tsparticles'\nimport styled from 'styled-components'\nimport type { ISourceOptions } from 'tsparticles-engine'\nimport type { CSSProperties } from 'react'\n\ninterface Props {\n  id: string;\n  width?: string\n  height?: string\n  options?: ISourceOptions\n  style?: CSSProperties,\n}\n\nconst ParticlesBackground = ({ width, options, height, style, id }: Props) => {\n  const particlesInit = useCallback(async (engine: Engine) => {\n    await loadFull(engine)\n  }, [])\n\n  return (\n    <>\n      <StyledParticles\n        id={id}\n        init={particlesInit}\n        options={options}\n        width={width}\n        height={height}\n        style={style}\n      />\n    </>\n  )\n}\n\nconst StyledParticles = styled(Particles)`\n  height: ${(props) => (props.height ? props.height : '0')};\n`\nexport default ParticlesBackground\n","import styled from 'styled-components'\nimport SocialMedia from './components/SocialMedia'\nimport CryptoPrices from './components/CryptoPrices'\nimport NavigationMenu from './components/NavigationMenu'\nimport { Layout } from '../../styles/breakpoints'\n\nimport OpenseaLogo from '../../assets/media/opensea.png'\nimport TwitterLogo from '../../assets/media/twitter.png'\nimport OneBidLogo from '../../assets/media/onebidlogo.png'\n\nimport { MediaIcon } from './models/MediaIcon'\nimport { AdjustingSection } from '../../layouts/AdjustingSection/AdjustingSection'\nimport { customOptionsFour } from '../../layouts/Particles/config/customOptionsFour'\nimport ParticlesBackground from '../../layouts/Particles'\n\nconst Footer = () => {\n  const baseMedia: MediaIcon[] = [\n    {\n      path: TwitterLogo,\n      redirectionLink: 'https://twitter.com/diamondsct',\n      altText: 'TwitterLogo',\n    },\n  ]\n  const additionalMedia: MediaIcon[] = [\n    {\n      path: OpenseaLogo,\n      redirectionLink: 'https://opensea.io/DCFT/',\n      altText: 'OpenseaLogo',\n    },\n    {\n      path: OneBidLogo,\n      redirectionLink: 'https://onebid.pl/pl/auction/-/3391',\n      altText: 'OneBidLogo',\n    },\n  ]\n\n  return (\n    <FullWidthContainer>\n      <ParticlesBackground\n        width='100%'\n        height='100%'\n        options={customOptionsFour}\n        style={{ position: 'absolute', zIndex: '-1' }}\n        id={'FooterParticles'}\n      />\n      <ExtendedAdjustingSection>\n        <ColumnWrapper>\n          <CryptoPrices />\n        </ColumnWrapper>\n\n        <ColumnWrapper>\n          <SocialMedia\n            headerText={'Dołącz do naszej społeczności:'}\n            media={baseMedia}\n          />\n\n          <SocialMedia\n            headerText={'Jesteśmy dostępni także na:'}\n            media={additionalMedia}\n          />\n        </ColumnWrapper>\n      </ExtendedAdjustingSection>\n\n      <ExtendedAdjustingSection>\n        <NavigationMenu />\n      </ExtendedAdjustingSection>\n\n      <ExtendedAdjustingSection>\n        <Restrictions> Ⓒ DIAMONDS CRAFT. ALL RIGHTS RESERVED. </Restrictions>\n      </ExtendedAdjustingSection>\n    </FullWidthContainer>\n  )\n}\n\nconst FullWidthContainer = styled.div`\n  width: 100%;\n  background: transparent;\n`\n\nconst ExtendedAdjustingSection = styled(AdjustingSection)`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: space-around;\n\n  @media only screen and (${Layout.laptop}) {\n    flex-direction: row;\n  }\n`\n\nconst ColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 4rem;\n\n  @media only screen and (${Layout.laptop}) {\n    min-width: 400px;\n    margin-top: 12rem;\n  }\n`\n\nconst Restrictions = styled.div`\n  margin: 4rem auto 0 auto;\n  color: #aeaeae;\n  font-size: 0.8rem;\n  font-weight: bold;\n`\n\nexport default Footer\n","export const delay = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms))\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport background from '../../assets/homepage/newEntrySection/tlosmall.webp'\nimport samanta from '../../assets/homepage/newEntrySection/samantacompressed.webp'\n\nimport { Layout } from '../../styles/breakpoints'\n\nimport { useTextTyping } from '../../hooks/useTextTyping'\nimport { delay } from '../../utils/DelayFunction'\nimport ParticlesBackground from \"../../layouts/Particles\";\nimport { customOptionsFour } from \"../../layouts/Particles/config/customOptionsFour\";\nimport { AdjustingSection } from \"../../layouts/AdjustingSection/AdjustingSection\";\n\nconst NewEntrySection = () => {\n    const [text, setText] = useState<string>('')\n\n    useTextTyping(delay, setText)\n\n    return (\n        <>\n            <Background />\n            <ParticlesBackground\n                width='100%'\n                height='100%'\n                options={customOptionsFour}\n                style={{ position: 'absolute', zIndex: '-1' }}\n                id={'NewEntrySectionParticles'}\n            />\n            <Samanta />\n            <Wrapper>\n                <ExtendedAdjustingSection>\n                    <Headline> {text} </Headline>\n                </ExtendedAdjustingSection>\n            </Wrapper>\n        </>\n    )\n}\n\nconst Wrapper = styled.section`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  background: transparent;\n  z-index: 10;\n`\n\nconst ExtendedAdjustingSection = styled(AdjustingSection)`\n  color: #ffffff;\n  flex-direction: column;\n  position: relative;\n  display: flex;\n  height: 100%;\n  box-sizing: border-box;\n`\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100vh;\n  object-fit: cover;\n  background-image: url('${background}');\n  background-size: cover;\n  background-position: center;\n  position: absolute;\n  z-index: -2;\n  background-attachment: fixed;\n`\n\nconst Samanta = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: url('${samanta}');\n  background-size: cover;\n  background-position: center;\n  object-fit: cover;\n  position: absolute;\n  z-index: 5;\n  background-attachment: fixed;\n`\n\n\nconst Headline = styled.h1`\n  margin-top: auto;\n  color: #ffffff;\n  box-sizing: border-box;\n  padding: 0 0 3rem 0;\n  font-size: 1.7rem;\n  text-shadow: 0 0 6px #000000, 0 0 12px #000000, 0 0 18px #000000;\n  display: flex;\n  justify-content: flex-start;\n\n  @media only screen and (${Layout.tablet}) {\n    padding: 0 3rem;\n    font-size: 4rem;\n  }\n\n  @media only screen and (${Layout.laptop}) {\n    padding: 0 9rem;\n  }\n`\n\n\nexport default NewEntrySection\n","import React, { useEffect } from 'react'\n\nexport function useTextTyping(\n  delay: (ms: number) => Promise<unknown>,\n  setText: React.Dispatch<React.SetStateAction<string>>\n) {\n  const textToDisplay = 'We Forge The Future'\n\n  useEffect(() => {\n    async function typeText() {\n      await delay(1200)\n      let i = 0\n      const interval = setInterval(async () => {\n        let newLetter = textToDisplay[i++]\n        setText((prev) => prev.concat(newLetter))\n        if (i === textToDisplay.length) {\n          clearInterval(interval)\n        }\n      }, 60)\n    }\n    typeText()\n  }, [delay, setText])\n}\n","import React from 'react'\nimport NavBar from '../../layouts/NavBar'\nimport { GlobalStyle } from '../../styles/global-styles'\nimport { useOutlet } from 'react-router-dom'\nimport Footer from '../../features/Footer'\nimport NewEntrySection from \"../../features/NewEntrySection\";\nconst HomePage = React.lazy(() => import('../../pages/HomePage'))\n\nconst suspenseComponent = (component: React.ReactNode) => {\n  return <React.Suspense fallback='Loading...'>{component}</React.Suspense>\n}\n\nconst RootPage = () => {\n  const outlet = useOutlet()\n\n  return (\n    <>\n      <NavBar />\n      <div id={'entryPageStartHook'}></div>\n      <NewEntrySection />\n      <div id={'entryPageEndHook'}></div>\n      {outlet || suspenseComponent(<HomePage />)}\n      <Footer />\n      <GlobalStyle />\n    </>\n  )\n}\n\nexport default RootPage\n","const breakpoint = {\n    tablet: '768px',\n    laptop: '1200px',\n    desktop: '1900px'\n}\n\nexport const Layout = {\n    tablet: `(min-width: ${breakpoint.tablet})`,\n    laptop: `(min-width: ${breakpoint.laptop})`,\n    desktop: `(min-width: ${breakpoint.desktop})`,\n}\n"],"names":["AdjustingSection","styled","PageWrapper","Wrapper","Image","to","src","logoImg","loading","alt","NavList","Item","NavLinkStyled","NavLink","key","destination","nameOfPage","exact","scrollHook","map","end","onClick","setTimeout","document","getElementById","scrollIntoView","behavior","block","inline","scrollToEntrySection","iOS","navigator","test","userAgent","useState","state","setState","toggleDrawer","open","event","type","includes","IconButton","size","edge","color","sx","mr","Menu","style","fontSize","SwipeableDrawer","anchor","onClose","onOpen","disableBackdropTransition","disableDiscovery","PaperProps","backgroundColor","Box","width","role","onKeyDown","showState","Layout","show","setShowState","offsetValue","controlNavbar","window","scrollY","useEffect","addEventListener","removeEventListener","useChangeStateOnScroll","GlobalStyle","createGlobalStyle","regular","bold","Header3","Icon","path","redirectionLink","altText","href","target","rel","Container","LinkIconsWrapper","headerText","media","i","TokenDataWrapper","CryptoSignature","Name","Price","iconSize","iconPath","name","price","className","plnFormatter","Intl","NumberFormat","currency","formatToPlnWithoutUnits","text","format","slice","TokenDataStyled","TokenData","bitcoin","ethereum","cardano","doge","prices","setPrices","fetchData","Promise","all","axios","btcRes","ethRes","adaRes","dogeRes","data","market_data","current_price","pln","smoothNavigate","NavigationWrapper","LinksColumn","toUpperCase","customOptionsFour","fullScreen","enable","particles","number","value","density","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","StyledParticles","Particles","props","height","options","id","particlesInit","useCallback","engine","loadFull","init","FullWidthContainer","ExtendedAdjustingSection","ColumnWrapper","Restrictions","baseMedia","additionalMedia","OneBidLogo","position","zIndex","delay","ms","resolve","Background","background","Samanta","samanta","Headline","setText","textToDisplay","interval","setInterval","newLetter","prev","concat","length","clearInterval","typeText","useTextTyping","HomePage","React","component","outlet","useOutlet","fallback","breakpoint","tablet","laptop","desktop"],"sourceRoot":""}