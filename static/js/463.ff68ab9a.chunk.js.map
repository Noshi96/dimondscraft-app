{"version":3,"file":"static/js/463.ff68ab9a.chunk.js","mappings":"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","sources":["layouts/PageWrapper/index.ts","layouts/NavBar/Logo.tsx","layouts/NavBar/Nav.tsx","layouts/Drawer/index.tsx","layouts/NavBar/index.tsx","styles/global-styles.ts","features/Footer/layouts/Header3.ts","features/Footer/components/LinkIcon.tsx","features/Footer/components/SocialMedia.tsx","features/Footer/components/TokenData.tsx","features/Footer/components/CryptoPrices.tsx","features/Footer/components/NavigationMenu.tsx","features/Footer/index.tsx","pages/RootPage/index.tsx","styles/breakpoints.ts"],"sourcesContent":["import styled from 'styled-components/macro'\n\nexport const PageWrapper = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  box-sizing: content-box;\n  position: relative;\n`\n","import styled from 'styled-components/macro'\nimport { NavLink } from 'react-router-dom'\nimport logoImg from '../../assets/logoforge.png'\n\nconst Logo = () => {\n  return (\n    <Wrapper>\n      <NavLink to='/'>\n        <Image src={logoImg} loading='lazy' alt='logo_diamondscraft' />\n      </NavLink>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Image = styled.img`\n  width: 100%;\n  height: 4rem;\n`\nexport default Logo\n","import styled from 'styled-components/macro'\nimport { NavLink } from 'react-router-dom'\nimport { PathsTypes } from './model'\n\nconst Nav = () => {\n  const paths: PathsTypes[] = [\n    {\n      key: 'home',\n      destination: '/',\n      nameOfPage: 'Home',\n      exact: true,\n    },\n    {\n      key: 'artists',\n      destination: '/artists',\n      nameOfPage: 'Artists',\n    },\n    {\n      key: 'about',\n      destination: '/about',\n      nameOfPage: 'About us',\n    },\n    {\n      key: 'art',\n      destination: '/art',\n      nameOfPage: 'Art',\n    },\n    {\n      key: 'media',\n      destination: '/our-media',\n      nameOfPage: 'Our media',\n    },\n    {\n      key: 'links',\n      destination: '/links',\n      nameOfPage: 'Links',\n    },\n  ]\n\n  return (\n    <NavList>\n      {paths.map(({ key, destination, nameOfPage, exact }) => (\n        <Item key={key}>\n          <NavLinkStyled end={exact} to={destination}>\n            {nameOfPage}\n          </NavLinkStyled>\n        </Item>\n      ))}\n    </NavList>\n  )\n}\n\nconst NavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 2rem;\n  list-style-type: none;\n  padding-inline-start: 0;\n`\n\nconst Item = styled.li`\n  cursor: pointer;\n`\n\nconst NavLinkStyled = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  padding: 1rem 0;\n  text-transform: capitalize;\n  font-size: 1.1rem;\n  transition: all 0.4s;\n\n  &:link,\n  &:visited {\n    color: #ffffff;\n  }\n  &:hover,\n  &:active {\n    background-color: #22192f;\n    color: #ffaa00;\n  }\n\n  &.active {\n    background-color: #22192f;\n    color: #ffaa00;\n  }\n`\n\nexport default Nav\n","import { useState } from 'react'\nimport Box from '@mui/material/Box'\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Nav from '../NavBar/Nav'\n\nconst anchorType = 'right'\nconst iOS =\n  typeof navigator !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent)\n\nconst Drawer = () => {\n  const [state, setState] = useState(false)\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event?.type &&\n      ['Tab', 'Shift'].includes((event as React.KeyboardEvent).key)\n    ) {\n      return\n    }\n\n    setState(open)\n  }\n\n  const list = () => (\n    <Box\n      sx={{ width: 250 }}\n      role='presentation'\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <Nav />\n    </Box>\n  )\n\n  return (\n    <>\n      <IconButton\n        onClick={toggleDrawer(true)}\n        size='large'\n        edge='start'\n        color='inherit'\n        aria-label='menu'\n        sx={{ mr: 2 }}\n      >\n        <MenuIcon style={{ fontSize: 40 }} />\n      </IconButton>\n      <SwipeableDrawer\n        anchor={anchorType}\n        open={state}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#0A0019',\n          },\n        }}\n      >\n        {list()}\n      </SwipeableDrawer>\n    </>\n  )\n}\n\nexport default Drawer\n","import styled from 'styled-components/macro'\nimport Logo from './Logo'\nimport { PageWrapper } from '../PageWrapper'\nimport Drawer from '../Drawer'\n\nconst NavBar = () => {\n  return (\n    <Wrapper>\n      <PageWrapper>\n        <Logo />\n        <Drawer />\n      </PageWrapper>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.header`\n  height: 5rem;\n  display: flex;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  color: #ffffff;\n  z-index: 12;\n\n  ${PageWrapper} {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`\n\nexport default NavBar\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    line-height: 1.5;\n  }\n\n  body {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    height: 100vh;\n    background-color: #000000;\n  }\n\n  body.fontLoaded {\n    font-family: 'Inter', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n  \n  p,\n  label {\n    line-height: 1.5em;\n  }\n\n  input, select, button {\n    font-family: inherit;\n    font-size: inherit;\n  }\n\n  .icon {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    text-decoration: none;\n  }\n`\n","import styled from 'styled-components/macro'\n\nexport const Header3 = styled.div`\n  font-size: 24px;\n  margin-bottom: 1.25rem;\n  font-family: 'Paytone One', sans-serif;\n`\n","import styled from 'styled-components'\n\ninterface Props {\n  path: string\n  redirectionLink: string\n}\n\nconst LinkIcon = ({ path, redirectionLink }: Props) => {\n  return (\n    <a href={redirectionLink} target={'_blank'} rel='noopener noreferrer'>\n      <Icon src={path}></Icon>\n    </a>\n  )\n}\n\nconst Icon = styled.img`\n  width: 40px;\n  height: 40px;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    transform: translateY(-4px);\n  }\n`\n\nexport default LinkIcon\n","import styled from 'styled-components'\nimport { Header3 } from '../layouts/Header3';\nimport LinkIcon from \"./LinkIcon\";\nimport { MediaIcon } from \"../models/MediaIcon\";\n\n\ninterface Props {\n    headerText: string;\n    media: MediaIcon[];\n}\n\nconst SocialMedia = ({headerText, media}: Props) => {\n    return (\n        <Container>\n            <Header3> {headerText} </Header3>\n            <LinkIconsWrapper>\n                {media.map(({ path, redirectionLink }, i) => (\n                    <LinkIcon key={i} path={path} redirectionLink={redirectionLink}></LinkIcon>\n                ))}\n            </LinkIconsWrapper>\n        </Container>\n    )\n}\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  color: #ffffff;\n  margin-bottom: 2.5rem;\n`\n\nconst LinkIconsWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  width: 100%;\n`\n\n\nexport default SocialMedia;\n\n\n","import styled from \"styled-components\";\n\ninterface Props {\n    iconPath: string;\n    name: string;\n    price: number | string;\n    className?: string;\n}\n\n\nconst TokenData = ({ iconPath, name, price, className }: Props) => {\n    return (\n        <TokenDataWrapper className={className || ''}>\n            <Icon src={ iconPath }></Icon>\n            <Name> { name } </Name>\n            <Price> { price || '-' } PLN </Price>\n        </TokenDataWrapper>\n    )\n}\n\n\nconst TokenDataWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 0.5rem;\n`\n\nconst Icon = styled.img`\n  width: 32px;\n  height: 32px;\n`\n\nconst Name = styled.div`\n  width: 120px;\n  margin-right: 4rem;\n`;\nconst Price = styled.div``;\n\n\n\nexport default TokenData;\n\n\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Header3 } from '../layouts/Header3';\nimport styled from 'styled-components';\nimport TokenData from './TokenData';\n\nimport BitcoinLogo from '../../../assets/tokens/btc.png';\nimport EthereumLogo from '../../../assets/tokens/eth.png';\nimport CardanoLogo from '../../../assets/tokens/ada.png';\nimport DogeLogo from '../../../assets/tokens/doge.png';\n\ninterface TokenPrices {\n    bitcoin: string;\n    ethereum: string;\n    cardano: string;\n    doge: string;\n}\n\ninterface TokenResponse {\n    market_data: {\n        current_price: {\n            pln: number;\n        }\n    }\n}\n\nconst plnFormeter = new Intl.NumberFormat('pl-PL', {\n    style: 'currency',\n    currency: 'PLN',\n});\n\nconst formatToPlnWithoutUnits = (text: number): string => {\n    return plnFormeter.format(text).slice(0, -3);\n}\n\nconst CryptoPrices = () => {\n    const initPriceState = {\n        bitcoin: '-',\n        ethereum: '-',\n        cardano: '-',\n        doge: '-'\n    }\n    const [prices, setPrices] = useState<TokenPrices>(initPriceState);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const [ btcRes, ethRes, adaRes, dogeRes ] = await Promise.all([\n                axios.get<TokenResponse>(`https://api.coingecko.com/api/v3/coins/bitcoin`),\n                axios.get<TokenResponse>(`https://api.coingecko.com/api/v3/coins/ethereum`),\n                axios.get<TokenResponse>(`https://api.coingecko.com/api/v3/coins/cardano`),\n                axios.get<TokenResponse>(`https://api.coingecko.com/api/v3/coins/dogecoin`),\n            ])\n\n            setPrices({\n                bitcoin: formatToPlnWithoutUnits(btcRes.data.market_data.current_price.pln),\n                ethereum: formatToPlnWithoutUnits(ethRes.data.market_data.current_price.pln),\n                cardano: formatToPlnWithoutUnits(adaRes.data.market_data.current_price.pln),\n                doge: formatToPlnWithoutUnits(dogeRes.data.market_data.current_price.pln),\n            } as TokenPrices);\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <Container>\n            <Header3> Aktualne ceny kryptowalut: </Header3>\n            <TokenDataStyled iconPath={ BitcoinLogo } name={ 'Bitcoin (BTC)' } price={ prices?.bitcoin }></TokenDataStyled>\n            <TokenDataStyled iconPath={ EthereumLogo } name={ 'Ethereum (ETH)' } price={ prices?.ethereum }></TokenDataStyled>\n            <TokenDataStyled iconPath={ CardanoLogo } name={ 'Cardano 2(ADA)' } price={ prices?.cardano }></TokenDataStyled>\n            <TokenDataStyled iconPath={ DogeLogo } name={ 'Dogecoin (doge)' } price={ prices?.doge }></TokenDataStyled>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  color: #ffffff;\n  margin-bottom: 4rem;\n`\n\n\nconst TokenDataStyled = styled(TokenData)`\n  margin-bottom: 1rem;\n`\n\nexport default CryptoPrices;\n","import styled from 'styled-components'\nimport { Header3 } from '../layouts/Header3'\nimport { NavLink } from 'react-router-dom'\nimport { Layout } from '../../../styles/breakpoints'\n\nconst NavigationMenu = () => {\n  return (\n    <Container>\n      <Header3> Menu: </Header3>\n      <NavigationWrapper>\n        <LinksColumn>\n          <NavLinkStyled end={true} to={'/'}>\n            {' '}\n            {'Strona główna'.toUpperCase()}{' '}\n          </NavLinkStyled>\n        </LinksColumn>\n        <LinksColumn>\n          <NavLinkStyled to={'/artists'}>\n            {' '}\n            {'Media'.toUpperCase()}{' '}\n          </NavLinkStyled>\n        </LinksColumn>\n        <LinksColumn>\n          <NavLinkStyled to={'/art'}> {'O nas'.toUpperCase()} </NavLinkStyled>\n        </LinksColumn>\n      </NavigationWrapper>\n    </Container>\n  )\n}\n\nexport default NavigationMenu\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-direction: column;\n  color: #ffffff;\n  margin-bottom: 1rem;\n  min-height: 100px;\n\n  @media only screen and (${Layout.laptop}) {\n    flex-direction: row;\n  }\n`\n\nconst NavigationWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1rem 1rem;\n\n  @media only screen and (${Layout.laptop}) {\n    margin: 1rem 0 0 1rem;\n  }\n`\n\nconst LinksColumn = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-direction: column;\n  gap: 1rem;\n`\n\nconst NavLinkStyled = styled(NavLink)`\n  background: transparent;\n  color: #aeaeae;\n  border: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n  font-size: 14px;\n  box-sizing: border-box;\n  padding: 4px 4px;\n\n  &:hover {\n    background: #ffffff11;\n  }\n\n  &.active {\n    background-color: #ffffff;\n    color: #22192f;\n  }\n`\n","import styled from 'styled-components'\nimport SocialMedia from './components/SocialMedia'\nimport CryptoPrices from './components/CryptoPrices'\nimport NavigationMenu from './components/NavigationMenu'\nimport { Layout } from '../../styles/breakpoints'\n\nimport OpenseaLogo from '../../assets/media/opensea.png'\nimport DiscordLogo from '../../assets/media/discord.png'\nimport InstagramLogo from '../../assets/media/instagram.png'\nimport TelegramLogo from '../../assets/media/telegram.png'\nimport TwitterLogo from '../../assets/media/twitter.png'\nimport YouTubeLogo from '../../assets/media/youtube.png'\n\nimport { MediaIcon } from './models/MediaIcon'\n\nconst Footer = () => {\n  const additionalMedia: MediaIcon[] = [\n    { path: OpenseaLogo, redirectionLink: 'https://opensea.io/DCFT/' },\n  ]\n\n  const baseMedia: MediaIcon[] = [\n    { path: TwitterLogo, redirectionLink: 'https://twitter.com/diamondsct' },\n    {\n      path: InstagramLogo,\n      redirectionLink: 'https://www.instagram.com/diamondscraft.io//',\n    },\n    { path: DiscordLogo, redirectionLink: 'https://opensea.io/' },\n    { path: TelegramLogo, redirectionLink: 'https://opensea.io/' },\n    { path: YouTubeLogo, redirectionLink: 'https://opensea.io/' },\n  ]\n\n  return (\n    <Section>\n      <ContentWrapper>\n        <Topper>\n          {' '}\n          💎 <span> DIAMONDS CRAFT </span>{' '}\n        </Topper>\n\n        <RowWrapper>\n          <ColumnWrapper>\n            <SocialMedia\n              headerText={'Jesteśmy dostępni także na:'}\n              media={additionalMedia}\n            ></SocialMedia>\n            <NavigationMenu></NavigationMenu>\n            <CryptoPrices></CryptoPrices>\n          </ColumnWrapper>\n          <ColumnWrapper>\n            <SocialMedia\n              headerText={'Dołącz do naszej społeczności:'}\n              media={baseMedia}\n            ></SocialMedia>\n          </ColumnWrapper>\n        </RowWrapper>\n\n        <Restrictions> Ⓒ DIAMONDS CRAFT. ALL RIGHTS RESERVED. </Restrictions>\n      </ContentWrapper>\n    </Section>\n  )\n}\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #252525;\n  color: #ffffff;\n  box-sizing: border-box;\n  padding: 100px 0 50px;\n`\n\nconst ContentWrapper = styled.div`\n  margin: 0 auto;\n  padding: 0.5rem;\n`\n\nconst ColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (${Layout.laptop}) {\n    min-width: 400px;\n  }\n`\n\nconst RowWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n\n  @media only screen and (${Layout.laptop}) {\n    flex-direction: row;\n    gap: 0 5rem;\n  }\n`\n\nconst Topper = styled.div`\n  margin: 0 auto 4rem auto;\n  color: #aeaeae;\n  font-size: 12px;\n  font-weight: bold;\n\n  span {\n    margin-left: 0.25rem;\n  }\n`\n\nconst Restrictions = styled.div`\n  margin: 4rem auto 0 auto;\n  color: #aeaeae;\n  font-size: 12px;\n  font-weight: bold;\n`\n\nexport default Footer\n","import React from 'react'\nimport NavBar from '../../layouts/NavBar'\nimport { GlobalStyle } from '../../styles/global-styles'\nimport { useOutlet } from 'react-router-dom'\nimport { ScrollRestoration } from 'react-router-dom'\nimport Footer from '../../features/Footer'\nconst HomePage = React.lazy(() => import('../../pages/HomePage'))\n\nconst suspenseComponent = (component: React.ReactNode) => {\n  return <React.Suspense fallback='Loading...'>{component}</React.Suspense>\n}\n\nconst RootPage = () => {\n  const outlet = useOutlet()\n\n  return (\n    <>\n      <NavBar />\n      {outlet || suspenseComponent(<HomePage />)}\n      <Footer />\n      <GlobalStyle />\n      <ScrollRestoration />\n    </>\n  )\n}\n\nexport default RootPage\n","const breakpoint = {\n    tablet: '768px',\n    laptop: '1200px',\n    desktop: '1900px'\n}\n\nexport const Layout = {\n    tablet: `(min-width: ${breakpoint.tablet})`,\n    laptop: `(min-width: ${breakpoint.laptop})`,\n    desktop: `(min-width: ${breakpoint.desktop})`,\n}\n"],"names":["PageWrapper","styled","Wrapper","Image","to","src","logoImg","loading","alt","NavList","Item","NavLinkStyled","NavLink","key","destination","nameOfPage","exact","map","end","iOS","navigator","test","userAgent","useState","state","setState","toggleDrawer","open","event","type","includes","IconButton","onClick","size","edge","color","sx","mr","Menu","style","fontSize","SwipeableDrawer","anchor","onClose","onOpen","disableBackdropTransition","disableDiscovery","PaperProps","backgroundColor","Box","width","role","onKeyDown","GlobalStyle","createGlobalStyle","Header3","Icon","path","redirectionLink","href","target","rel","Container","LinkIconsWrapper","headerText","media","i","TokenDataWrapper","Name","Price","iconPath","name","price","className","plnFormeter","Intl","NumberFormat","currency","formatToPlnWithoutUnits","text","format","slice","TokenDataStyled","TokenData","bitcoin","ethereum","cardano","doge","prices","setPrices","useEffect","fetchData","Promise","all","axios","btcRes","ethRes","adaRes","dogeRes","data","market_data","current_price","pln","NavigationWrapper","LinksColumn","toUpperCase","Layout","Section","ContentWrapper","ColumnWrapper","RowWrapper","Topper","Restrictions","additionalMedia","baseMedia","HomePage","React","component","outlet","useOutlet","fallback","breakpoint","tablet","laptop","desktop"],"sourceRoot":""}