{"version":3,"file":"static/js/86.42ea31f3.chunk.js","mappings":"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","sources":["layouts/PageWrapper/index.ts","layouts/NavBar/Logo.tsx","layouts/NavBar/Nav.tsx","layouts/Drawer/index.tsx","layouts/NavBar/index.tsx","styles/global-styles.ts","pages/RootPage/index.tsx"],"sourcesContent":["import styled from 'styled-components/macro'\r\n\r\nexport const PageWrapper = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  box-sizing: content-box;\r\n  position: relative;\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport { NavLink } from 'react-router-dom'\r\nimport logoImg from '../../assets/logoforge.png'\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <Wrapper>\r\n      <NavLink to='/'>\r\n        <Image src={logoImg} loading='lazy' alt='logo_diamondscraft' />\r\n      </NavLink>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 4rem;\r\n`\r\nexport default Logo\r\n","import styled from 'styled-components/macro'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { PathsTypes } from './model'\r\n\r\nconst Nav = () => {\r\n  const paths: PathsTypes[] = [\r\n    {\r\n      key: 'home',\r\n      destination: '/',\r\n      nameOfPage: 'Home',\r\n      exact: true,\r\n    },\r\n    {\r\n      key: 'artists',\r\n      destination: '/artists',\r\n      nameOfPage: 'Artists',\r\n    },\r\n    {\r\n      key: 'about',\r\n      destination: '/about',\r\n      nameOfPage: 'About us',\r\n    },\r\n    {\r\n      key: 'art',\r\n      destination: '/art',\r\n      nameOfPage: 'Art',\r\n    },\r\n    {\r\n      key: 'media',\r\n      destination: '/our-media',\r\n      nameOfPage: 'Our media',\r\n    },\r\n    {\r\n      key: 'links',\r\n      destination: '/links',\r\n      nameOfPage: 'Links',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <NavList>\r\n      {paths.map(({ key, destination, nameOfPage, exact }) => (\r\n        <Item key={key}>\r\n          <NavLinkStyled end={exact} to={destination}>\r\n            {nameOfPage}\r\n          </NavLinkStyled>\r\n        </Item>\r\n      ))}\r\n    </NavList>\r\n  )\r\n}\r\n\r\nconst NavList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  margin-top: 2rem;\r\n  list-style-type: none;\r\n  padding-inline-start: 0;\r\n`\r\n\r\nconst Item = styled.li`\r\n  cursor: pointer;\r\n`\r\n\r\nconst NavLinkStyled = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1rem 0;\r\n  text-transform: capitalize;\r\n  text-decoration: none;\r\n  font-size: 1.1rem;\r\n  transition: all 0.4s;\r\n\r\n  &:link,\r\n  &:visited {\r\n    color: #ffffff;\r\n  }\r\n  &:hover,\r\n  &:active {\r\n    background-color: #22192f;\r\n    color: #ffaa00;\r\n  }\r\n\r\n  &.active {\r\n    background-color: #22192f;\r\n    color: #ffaa00;\r\n  }\r\n`\r\n\r\nexport default Nav\r\n","import { useState } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport styled from 'styled-components'\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport Nav from '../NavBar/Nav'\r\n\r\nconst anchorType = 'right'\r\nconst iOS =\r\n  typeof navigator !== 'undefined' &&\r\n  /iPad|iPhone|iPod/.test(navigator.userAgent)\r\n\r\nconst Drawer = () => {\r\n  const [state, setState] = useState(false)\r\n\r\n  const toggleDrawer = (open: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent\r\n  ) => {\r\n    if (\r\n      event?.type &&\r\n      ['Tab', 'Shift'].includes((event as React.KeyboardEvent).key)\r\n    ) {\r\n      return\r\n    }\r\n\r\n    setState(open)\r\n  }\r\n\r\n  const list = () => (\r\n    <Box\r\n      sx={{ width: 250 }}\r\n      role='presentation'\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <Nav />\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={toggleDrawer(true)}\r\n        size='large'\r\n        edge='start'\r\n        color='inherit'\r\n        aria-label='menu'\r\n        sx={{ mr: 2 }}\r\n      >\r\n        <MenuIcon style={{ fontSize: 40 }} />\r\n      </IconButton>\r\n      <SwipeableDrawer\r\n        anchor={anchorType}\r\n        open={state}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n        disableBackdropTransition={!iOS}\r\n        disableDiscovery={iOS}\r\n        PaperProps={{\r\n          sx: {\r\n            backgroundColor: '#0A0019',\r\n          },\r\n        }}\r\n      >\r\n        {list()}\r\n      </SwipeableDrawer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst MenuIconStyled = styled(IconButton)``\r\n\r\nexport default Drawer\r\n","import styled from 'styled-components/macro'\r\nimport Logo from './Logo'\r\nimport { PageWrapper } from '../PageWrapper'\r\nimport Drawer from '../Drawer'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Wrapper>\r\n      <PageWrapper>\r\n        <Logo />\r\n        <Drawer />\r\n      </PageWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.header`\r\n  box-shadow: 0 1px 0 0 #000000;\r\n  height: 5rem;\r\n  display: flex;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  background-color: #090119;\r\n  color: #ffffff;\r\n  z-index: 12;\r\n\r\n  ${PageWrapper} {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nexport default NavBar\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html,\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    padding-top: 2rem;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n    height: 100vh;\r\n    background-color: #000000;\r\n  }\r\n\r\n  body.fontLoaded {\r\n    font-family: 'Inter', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  }\r\n  \r\n  p,\r\n  label {\r\n    line-height: 1.5em;\r\n  }\r\n\r\n  input, select, button {\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n  }\r\n\r\n  .icon {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n  }\r\n\r\n  * {\r\n  box-sizing: border-box;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport NavBar from '../../layouts/NavBar'\r\nimport { GlobalStyle } from '../../styles/global-styles'\r\nimport { useOutlet } from 'react-router-dom'\r\nimport { ScrollRestoration } from 'react-router-dom'\r\nconst HomePage = React.lazy(() => import('../../pages/HomePage'))\r\n\r\nconst suspenseComponent = (component: React.ReactNode) => {\r\n  return <React.Suspense fallback='Loading...'>{component}</React.Suspense>\r\n}\r\n\r\nconst RootPage = () => {\r\n  const outlet = useOutlet()\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {outlet || suspenseComponent(<HomePage />)}\r\n      <GlobalStyle />\r\n      <ScrollRestoration />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RootPage\r\n"],"names":["PageWrapper","styled","Wrapper","Image","to","src","logoImg","loading","alt","NavList","Item","NavLinkStyled","NavLink","key","destination","nameOfPage","exact","map","end","iOS","navigator","test","userAgent","IconButton","useState","state","setState","toggleDrawer","open","event","type","includes","onClick","size","edge","color","sx","mr","Menu","style","fontSize","SwipeableDrawer","anchor","onClose","onOpen","disableBackdropTransition","disableDiscovery","PaperProps","backgroundColor","Box","width","role","onKeyDown","GlobalStyle","createGlobalStyle","HomePage","React","component","outlet","useOutlet","fallback"],"sourceRoot":""}